FROM quay.io/pypa/manylinux2014_x86_64:latest

# Add non-root user
ARG BUILD_UID=1001
ARG BUILD_USER=onnxruntimedev
RUN adduser --uid $BUILD_UID $BUILD_USER

# Build manylinux2014 docker image begin
ENV AUDITWHEEL_ARCH x86_64
ENV AUDITWHEEL_PLAT manylinux2014_$AUDITWHEEL_ARCH
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV DEVTOOLSET_ROOTPATH /opt/rh/devtoolset-8/root
ENV PATH $DEVTOOLSET_ROOTPATH/usr/bin:$PATH
ENV LD_LIBRARY_PATH $DEVTOOLSET_ROOTPATH/usr/lib64:$DEVTOOLSET_ROOTPATH/usr/lib:$DEVTOOLSET_ROOTPATH/usr/lib64/dyninst:$DEVTOOLSET_ROOTPATH/usr/lib/dyninst:/usr/local/lib64:/usr/local/lib
ENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig

# COPY manylinux2014_build_scripts /manylinux2014_build_scripts
# RUN bash /manylinux2014_build_scripts/build.sh 8 && rm -r manylinux2014_build_scripts && yum downgrade  -y glibc-2.17-317.el7 glibc-common-2.17-317.el7 glibc-devel-2.17-317.el7 glibc-headers-2.17-317.el7

ENV SSL_CERT_FILE=/opt/_internal/certs.pem

# Build manylinux2014 docker image end

ARG PYTHON_VERSION=3.6
ARG PYTHON_VER_PATH="cp36-cp36m"
ARG INSTALL_DEPS_EXTRA_ARGS
ARG BUILD_TYPE

ENV PYTHON_EXE="/opt/python/$PYTHON_VER_PATH/bin/python$PYTHON_VERSION"

# Add our own dependencies
ADD scripts /tmp/scripts
RUN cd /tmp/scripts && \
    /tmp/scripts/install_centos.sh && \
    /tmp/scripts/install_deps.sh -d cpu -p $PYTHON_VERSION -b BUILD_TYPE $INSTALL_DEPS_EXTRA_ARGS && \
    rm -rf /tmp/scripts

# Make /opt/python symlink (/opt/_internal/cpython-*) folders wriatable for onnxruntimedev user
RUN chown -fRL onnxruntimedev:onnxruntimedev /opt/python
RUN chmod 775 -fR /opt/_internal/cpython-*

# Switching to no-root user
WORKDIR /home/$BUILD_USER
USER $BUILD_USER
ENV PATH /usr/local/gradle/bin:/usr/local/dotnet:$PATH
RUN cd $USER
RUN git clone https://github.com/intel-staging/ort.git -b ov_torchort_integration 
RUN cd ort/torch_ort_inference && $PYTHON_EXE build.py